// Mocks generated by Mockito 5.2.0 from annotations
// in game_of_flutter/test/test_helper/mocks/repositories/repositories_mocks.dart.
// Do not manually edit this file.

import 'dart:async' as _i7;

import 'package:game_of_flutter/configs/configs.dart' as _i3;
import 'package:game_of_flutter/infrastructure/clients/client.dart' as _i2;
import 'package:game_of_flutter/infrastructure/dtos/character_dto.dart' as _i5;
import 'package:game_of_flutter/infrastructure/dtos/house_dto.dart' as _i4;
import 'package:game_of_flutter/infrastructure/repositories/character_repository.dart'
    as _i8;
import 'package:game_of_flutter/infrastructure/repositories/house_repository.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeClient_0 extends _i1.Fake implements _i2.Client {}

class _FakeConfigs_1 extends _i1.Fake implements _i3.Configs {}

class _FakeHouseDto_2 extends _i1.Fake implements _i4.HouseDto {}

class _FakeUri_3 extends _i1.Fake implements Uri {}

class _FakeCharacterDto_4 extends _i1.Fake implements _i5.CharacterDto {}

/// A class which mocks [HouseRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockHouseRepository extends _i1.Mock implements _i6.HouseRepository {
  MockHouseRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  _i3.Configs get configs => (super.noSuchMethod(Invocation.getter(#configs),
      returnValue: _FakeConfigs_1()) as _i3.Configs);
  @override
  _i7.Future<List<_i4.HouseDto>> getAll({int? page}) =>
      (super.noSuchMethod(Invocation.method(#getAll, [], {#page: page}),
              returnValue: Future<List<_i4.HouseDto>>.value(<_i4.HouseDto>[]))
          as _i7.Future<List<_i4.HouseDto>>);
  @override
  _i7.Future<_i4.HouseDto> getForId(int? id) =>
      (super.noSuchMethod(Invocation.method(#getForId, [id]),
              returnValue: Future<_i4.HouseDto>.value(_FakeHouseDto_2()))
          as _i7.Future<_i4.HouseDto>);
  @override
  Uri buildUri({String? path, Map<String, dynamic>? parameters}) =>
      (super.noSuchMethod(
          Invocation.method(
              #buildUri, [], {#path: path, #parameters: parameters}),
          returnValue: _FakeUri_3()) as Uri);
}

/// A class which mocks [CharacterRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockCharacterRepository extends _i1.Mock
    implements _i8.CharacterRepository {
  MockCharacterRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.Client get client => (super.noSuchMethod(Invocation.getter(#client),
      returnValue: _FakeClient_0()) as _i2.Client);
  @override
  _i3.Configs get configs => (super.noSuchMethod(Invocation.getter(#configs),
      returnValue: _FakeConfigs_1()) as _i3.Configs);
  @override
  _i7.Future<List<_i5.CharacterDto>> getAll({int? page}) =>
      (super.noSuchMethod(Invocation.method(#getAll, [], {#page: page}),
              returnValue:
                  Future<List<_i5.CharacterDto>>.value(<_i5.CharacterDto>[]))
          as _i7.Future<List<_i5.CharacterDto>>);
  @override
  _i7.Future<_i5.CharacterDto> getForId(int? id) => (super.noSuchMethod(
          Invocation.method(#getForId, [id]),
          returnValue: Future<_i5.CharacterDto>.value(_FakeCharacterDto_4()))
      as _i7.Future<_i5.CharacterDto>);
  @override
  Uri buildUri({String? path, Map<String, dynamic>? parameters}) =>
      (super.noSuchMethod(
          Invocation.method(
              #buildUri, [], {#path: path, #parameters: parameters}),
          returnValue: _FakeUri_3()) as Uri);
}
